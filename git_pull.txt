Gitコマンド解説
📝 プルリクエスト（Pull Request）
プルリクエストは、他のブランチに自分の変更を統合してもらうための承認依頼です。
チーム開発において、コードの品質を保ち、変更内容を安全に共有するための重要な仕組みです。

流れ:

新しいブランチ（例: new-branch）で作業を進める。

変更をリモートリポジトリに**push**する。

GitHubなどのプラットフォームで「Compare & pull request」ボタンを押し、プルリクエストを作成。

チームメンバーが変更内容をレビューする。

問題がなければ、「Merge」ボタンで変更をmainブランチに統合する。

🤝 pull と fetch の違い
pullは、リモートリポジトリの最新の変更をローカルに取得し、現在のブランチに統合する一連の操作です。これは、fetchとmergeの2つのステップを同時に実行します。

コマンド	役割	動作
git fetch	最新情報の取得のみ	リモートの最新情報をローカルに取得するが、作業中のブランチには反映しない。
git pull	取得 + 統合	fetchで取得した変更を、現在のブランチに自動でmergeする。
💡 使い分けのポイント

**git pull**は、リモートの最新版をすぐに反映したいときに便利です。

**git fetch**は、リモートの変更内容をマージする前に確認したいときに使います。より安全に作業を進めることができます。

🏃‍♂️ pull と clone の違い
どちらもリモートリポジトリのコードをローカルに取り込む操作ですが、目的が異なります。

コマンド	役割	実行タイミング
git clone	リポジトリの複製	ローカルにリポジトリが存在しない初回のみ。
git pull	リポジトリの更新	clone後に、リモートの最新の変更を差分として取り込む。
💥 コンフリクト（競合）
git pull実行時に、同じファイルの同じ行を複数人が変更していた場合に発生します。Gitがどちらの変更を採用すべきか判断できず、手動での修正が必要になります。

解決方法:

コンフリクトしたファイルを開き、<<<<<<<などの記号で示された部分を修正する。

git addで修正内容をステージングする。

git commitでマージを完了させる。